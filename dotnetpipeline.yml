# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main
variables:
  buildConfiguration: 'Release'
  azureSubscription: 'AZURE-SP-PIPELINE'
  webAppName: 'your-appservice-name'
  sqlServerName: 'your-sql-server-name.database.windows.net'
  sqlDbName: 'your-database-name'
  sqlAdminUser: 'your-sql-admin-username'
  sqlAdminPassword: '$(sqlPassword)'  # Mark this secret in DevOps
      
stages:
  - stage: Build
    displayName: 'Build and Publish'
    jobs:
    - job: Build
      pool:
        vmImage: 'windows-latest'
      steps:
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '8.00'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
      - task: DotNetCoreCLI@2
        inputs:
          azureSubscription: 'azure-sp-pipeline'
          command: 'build'
          projects: '**/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
      - task: DotNetCoreCLI@2
        inputs:
          azureSubscription: 'azure-sp-pipeline'
          command: 'publish'
          arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
  - stage: Deploy
    displayName: 'Deploying'
    dependsOn: Build
    jobs:
    - deployment: DeplyWeb
      environment: 'production'
      pool:
       vmImage: 'windows-latest'
      strategy:
        runOnce:
          deploy:
            steps:
            - download: current
              artifact: drop
            - task: AzureWebApp@1
              inputs:
                azureSubscription: 'azure-sp-pipeline'
                appType: 'webApp'
                appName: 'jogiweb'
                package: '$(Pipeline.Workspace)/drop'
                deploymentMethod: 'auto'
  - stage: SQLSQLfile
    displayName: "test"
    dependsOn: Deploy
    condition: succeeded()
    jobs:
    - job: Runsql
      pool:
        vmImage: 'windows-latest' 
      steps:
      - task: SqlAzureDacpacDeployment@1
        inputs:
          azureSubscription: $(sesqlServerNamer)
          DatabaseName: 
          SqlUsername: 
          SqlPassword: 
          deployType: 'sqlTask'
          SqlFile: 'sql-script/postdeploy.sql'
          
              